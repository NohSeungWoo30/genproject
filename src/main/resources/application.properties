spring.application.name=genproject

# ?? ?? (?? 8080)
server.port=8080

# Thymeleaf ??
spring.thymeleaf.prefix=classpath:/templates/
spring.thymeleaf.suffix=.html

# Oracle DB ??
spring.datasource.driver-class-name=oracle.jdbc.OracleDriver
spring.datasource.url=jdbc:oracle:thin:@localhost:1521:xe
spring.datasource.username=system
spring.datasource.password=12345

# MyBatis ??
mybatis.mapper-locations=classpath:mapper/**/*.xml
mybatis.type-aliases-package=generationgap.co.kr.domain

# schema.sql ???? ?? ???? ?? ????? always
spring.sql.init.mode=never
spring.sql.init.schema-locations=classpath:schema.sql

# 기존 로깅 레벨 유지
logging.level.org.springframework.security=DEBUG
logging.level.generationgap.co.kr=DEBUG

# MyBatis 관련 로깅 레벨 추가 및 강화
logging.level.org.mybatis=DEBUG
logging.level.org.mybatis.spring=DEBUG
logging.level.org.apache.ibatis=DEBUG
logging.level.org.apache.ibatis.datasource=DEBUG
logging.level.org.apache.ibatis.transaction=DEBUG
logging.level.org.apache.ibatis.session=DEBUG
logging.level.org.apache.ibatis.builder=DEBUG

# SQL 실행과 결과 매핑 관련
logging.level.org.apache.ibatis.executor=DEBUG    
logging.level.org.apache.ibatis.mapping=DEBUG
logging.level.org.apache.ibatis.reflection=DEBUG

# 타입 핸들러 관련
logging.level.org.apache.ibatis.type=DEBUG        
logging.level.org.apache.ibatis.io=DEBUG

# JDBC 드라이버 자체의 로깅 (DB 커넥션 문제 진단에 유용)
# Oracle 드라이버의 경우 (ojdbc8.jar 사용 시)
# logging.level.oracle.jdbc=DEBUG # 너무 많을 수 있음, 필요시 사용

# HikariCP Connection Pool 로깅 (DB 커넥션 풀 문제 진단)
logging.level.com.zaxxer.hikari=DEBUG

# Email Configuration (汎用 SMTP 設定)
#사용하는 이메일 서비스의 SMTP 서버 주소 (예: smtp.naver.com, smtp.daum.net)
spring.mail.host=smtp.gmail.com
#사용하는 SMTP 서버의 포트 (주로 587 또는 465)
spring.mail.port=587
#발신자 이메일 주소 (실제 발송 계정)
spring.mail.username=no.reply.genproject@gmail.com
#발신자 이메일 계정의 비밀번호 (또는 앱 비밀번호/지금은 앱 비밀번호)
spring.mail.password=mubm mqdu mvvy kqwd

# 공통 SMTP 속성 (대부분의 서비스에서 필요)
# SMTP 인증 사용 여부 (대부분 true)
spring.mail.properties.mail.smtp.auth=true
# TLS (Transport Layer Security) 사용 여부 (587 포트 사용 시 true)
spring.mail.properties.mail.smtp.starttls.enable=true
# TLS 필수 여부 (강제)
spring.mail.properties.mail.smtp.starttls.required=true
# 연결 타임아웃 (밀리초)
spring.mail.properties.mail.smtp.connectiontimeout=5000
# 읽기 타임아웃 (밀리초)
spring.mail.properties.mail.smtp.timeout=5000
# 쓰기 타임아웃 (밀리초)
spring.mail.properties.mail.smtp.writetimeout=5000

# 비밀번호 재설정 링크의 기본 URL (서버 주소)
# 로컬 개발: http://localhost:8080 (또는 해당 포트)
# 배포 환경: 실제 서비스 도메인 주소 (예: https://yourdomain.com)
app.base-url=http://localhost:8080

# Toss Payments ??? ? (??? ??? ??? ?? ??)
toss.payments.secretKey=test_gsk_docs_OaPz8L5KdmQXkzRz3y47BMw6

# ??? ??(local) api
naver.api.client.id=i_ejWICGM3EXVtLy6KRp
naver.api.client.secret=e4l0o4FCCx

# ??? ??? ??? ?? ?? (??? ??? ??? ?? ??)
upload.path=C:/uploads/profile/