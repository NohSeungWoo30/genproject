<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://www.mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="generationgap.co.kr.mapper.user.PasswordResetMapper">

    <resultMap id="passwordResetResultMap" type="generationgap.co.kr.domain.user.PasswordReset">
        <id property="resetIdx" column="reset_idx"/>
        <result property="userIdx" column="user_idx"/>
        <result property="token" column="token"/>
        <result property="expiresAt" column="expires_at" jdbcType="TIMESTAMP"/>
        <result property="usedAt" column="used_at" jdbcType="TIMESTAMP"/>
    </resultMap>

    <insert id="insertToken" parameterType="generationgap.co.kr.domain.user.PasswordReset"
            useGeneratedKeys="true" keyProperty="resetIdx">
        <selectKey keyProperty="resetIdx" resultType="long" order="AFTER">
            SELECT reset_idx
            FROM password_resets
            WHERE token = #{token}
            <!-- token은 UNIQUE하므로 이 조건으로 방금 삽입된 행을 찾을 수 있습니다.-->
        </selectKey>
        INSERT INTO password_resets (
        user_idx, token, expires_at
        ) VALUES (
        #{userIdx}, #{token}, #{expiresAt, jdbcType=TIMESTAMP}
        )
    </insert>

    <select id="findByToken" parameterType="string" resultMap="passwordResetResultMap">
        SELECT
        reset_idx, user_idx, token, expires_at, used_at
        FROM password_resets
        WHERE token = #{token}
    </select>

    <update id="updateTokenUsedAt">
        UPDATE password_resets
        SET used_at = #{usedAt, jdbcType=TIMESTAMP}
        WHERE token = #{token}
        AND used_at IS NULL
    </update>

    <select id="findValidUnusedTokenByUserIdx" resultMap="passwordResetResultMap">
        SELECT
        reset_idx, user_idx, token, expires_at, used_at
        FROM password_resets
        WHERE user_idx = #{userIdx}
        AND expires_at > #{now, jdbcType=TIMESTAMP}
        AND used_at IS NULL
    </select>

    <update id="invalidateAllTokensForUserIdx">
        UPDATE password_resets
        SET used_at = #{now, jdbcType=TIMESTAMP}
        WHERE user_idx = #{userIdx}
        AND used_at IS NULL      AND expires_at > #{now, jdbcType=TIMESTAMP}
    </update>

</mapper>